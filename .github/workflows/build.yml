name: "publish"

on:
  workflow_dispatch:

jobs:
  check-latest-release:
    runs-on: ubuntu-latest
    outputs:
      cyberchef_latest_release: ${{ steps.get-latest-release.outputs.cyberchef_latest_release }}
    steps:
      - name: Check latest release versions
        id: get-latest-release
        run: |
          my_latest_release=$(curl -s -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/latest | jq -r '.tag_name')
          echo "My latest release version: $my_latest_release"

          cyberchef_latest_release=$(curl -s https://api.github.com/repos/gchq/CyberChef/releases/latest | jq -r '.tag_name')
          echo "CyberChef latest release version: $cyberchef_latest_release"

          if [ "$my_latest_release" = "$cyberchef_latest_release" ]; then
            echo "You are at the latest CyberChef release"
            exit 0
          fi
          echo "::set-output name=cyberchef_latest_release::$cyberchef_latest_release"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-tauri:
    needs: check-latest-release
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs.
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
            sudo apt-get update
            sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: install frontend dependencies
        run: yarn install

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: 'v${{ needs.check-latest-release.outputs.cyberchef_latest_release }}'
          releaseName: 'CyberChefPE_v${{ needs.check-latest-release.outputs.cyberchef_latest_release }}'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}
